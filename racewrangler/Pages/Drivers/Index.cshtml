@page
@model racewrangler.Pages.Drivers.IndexModel

@{
    ViewData["Title"] = "Drivers";
}

<h1>Drivers</h1>

<p>
    <a asp-page="Create">New Driver</a>
</p>


<form asp-page="./Index" method="get" id="pageConfigForm">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a> |
            <select id="pageList" onchange="pageConfigForm.submit()" name="PageSize" value="@Model.PageSize">
                <option value=10 selected>10</option>
                <option value=20>20</option>
                <option value=30>30</option>
                <option value=40>40</option>
                <option value=50>50</option>
                <option value=100>100</option>
            </select>
            <label for="page_size">Results per Page</label>
        </p>
    </div>
</form>
            

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    Name
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.MemberNumSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Drivers[0].MemberNumber)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Drivers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName), @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemberNumber)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Drivers.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Drivers.HasNextPage ? "disabled" : "";
}



<form asp-page="./Index" method="get">
    <table>
        <tbody>
            <tr>
                <td>
                    <a asp-page="./Index"
                        asp-route-sortOrder="@Model.CurrentSort"
                        asp-route-pageIndex="@(Model.Drivers.PageIndex - 1)"
                        asp-route-currentFilter="@Model.CurrentFilter"
                        class="btn btn-primary @prevDisabled">
                        Previous
                    </a>
                </td>
                <td>
                    <div class="form-actions no-color">
                        Go to Page:<input type="text" name="pageIndex" value="@Model.Drivers.PageIndex" />
                        <input type="submit" value="Go" class="btn btn-primary" />
                    </div>
                </td>
                <td>
                    <a asp-page="./Index"
                        asp-route-sortOrder="@Model.CurrentSort"
                        asp-route-pageIndex="@(Model.Drivers.PageIndex + 1)"
                        asp-route-currentFilter="@Model.CurrentFilter"
                        class="btn btn-primary @nextDisabled">
                        Next
                    </a>
                </td>
            </tr>
        </tbody>
    </table>
</form>


