// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using racewrangler.Data;

namespace racewrangler.Migrations
{
    [DbContext(typeof(racewranglerContext))]
    [Migration("20200521215039_UpdateRuns")]
    partial class UpdateRuns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("racewrangler.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("racewrangler.Models.Classification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Handicap")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("racewrangler.Models.Competition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventNum")
                        .HasColumnType("int");

                    b.Property<int?>("EventSiteID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrgID")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventSiteID");

                    b.HasIndex("OrgID");

                    b.HasIndex("SeasonID");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("racewrangler.Models.Driver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("racewrangler.Models.Organizer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Organizers");
                });

            modelBuilder.Entity("racewrangler.Models.Points", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompID")
                        .HasColumnType("int");

                    b.Property<int?>("DriverID")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CompID");

                    b.HasIndex("DriverID");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("racewrangler.Models.RaceEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<int?>("ClassID")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionID")
                        .HasColumnType("int");

                    b.Property<int?>("DriverID")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sponsor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CarID");

                    b.HasIndex("ClassID");

                    b.HasIndex("CompetitionID");

                    b.HasIndex("DriverID");

                    b.ToTable("RaceEntries");
                });

            modelBuilder.Entity("racewrangler.Models.Run", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("LapTime")
                        .HasColumnType("real");

                    b.Property<int>("Penalties")
                        .HasColumnType("int");

                    b.Property<int?>("RaceEntryID")
                        .HasColumnType("int");

                    b.Property<int>("RunNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RaceEntryID");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("racewrangler.Models.Season", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("racewrangler.Models.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("racewrangler.Models.Competition", b =>
                {
                    b.HasOne("racewrangler.Models.Site", "EventSite")
                        .WithMany()
                        .HasForeignKey("EventSiteID");

                    b.HasOne("racewrangler.Models.Organizer", "Org")
                        .WithMany()
                        .HasForeignKey("OrgID");

                    b.HasOne("racewrangler.Models.Season", "Season")
                        .WithMany("Competitions")
                        .HasForeignKey("SeasonID");
                });

            modelBuilder.Entity("racewrangler.Models.Points", b =>
                {
                    b.HasOne("racewrangler.Models.Competition", "Comp")
                        .WithMany()
                        .HasForeignKey("CompID");

                    b.HasOne("racewrangler.Models.Driver", "Driver")
                        .WithMany("SeasonPoints")
                        .HasForeignKey("DriverID");
                });

            modelBuilder.Entity("racewrangler.Models.RaceEntry", b =>
                {
                    b.HasOne("racewrangler.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID");

                    b.HasOne("racewrangler.Models.Classification", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID");

                    b.HasOne("racewrangler.Models.Competition", "Competition")
                        .WithMany("Entrants")
                        .HasForeignKey("CompetitionID");

                    b.HasOne("racewrangler.Models.Driver", "Driver")
                        .WithMany("RaceEntries")
                        .HasForeignKey("DriverID");
                });

            modelBuilder.Entity("racewrangler.Models.Run", b =>
                {
                    b.HasOne("racewrangler.Models.RaceEntry", "RaceEntry")
                        .WithMany("Runs")
                        .HasForeignKey("RaceEntryID");
                });
#pragma warning restore 612, 618
        }
    }
}
